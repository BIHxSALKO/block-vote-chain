syntax = "proto3";

package Pericles.Protocol;

service Node 
{
    rpc Handshake(HandshakeRequest) returns (HandshakeResponse) {}
    rpc BroadcastVote(Vote) returns (Empty) {}
    rpc BroadcastBlock(Block) returns (Empty) {}
}

message HandshakeRequest
{
    int32 version = 1;
    double time = 2;
    ConnectionInfo my_connection_info = 3;
    int32 best_height = 4;
}

message HandshakeResponse
{
    repeated ConnectionInfo known_nodes = 1;
}

message ConnectionInfo
{
    string ip_address = 1;
    int32 port = 2;
}

message Block
{
    BlockHeader block_header = 1;
    bytes hash = 2;
    string miner_id = 3;
    int32 vote_counter = 4;
    repeated Vote votes = 5;
}

message BlockHeader
{
    bytes prev_block_hash = 1;
    bytes merkle_root_hash = 2;
    double timestamp = 3;
    uint32 bits = 4;
    uint32 nonce = 5;
}

message Vote
{
    bytes hash = 1;
    int32 version_number = 2;
    string voter_id = 3;
    string ballot = 4;
    string signature = 5;
}

message Empty
{
}