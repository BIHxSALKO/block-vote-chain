// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  // make a register function
  rpc Register (RegisterRequest) returns (KnownPeers) {}

  // make a Handshake function for only Node container
  rpc Handshake (HandshakeRequest) returns (KnownPeers) {}
	
  // make a new Txn Broadcast function/call for only Node container
  rpc NewTransactionBroadcast (Transaction) returns (Empty) {}

  // make a new Block Broadcast function/call for only Node container
  rpc NewBlockBroadcast (Block) returns (Empty) {}

}


message Transaction {
	int32 version_number = 1;

	int32 in_counter = 2;
	int32 out_counter = 3;
	string transaction_hash = 4;

	string sender = 5;
	string recipient = 6;
	float input_amount = 7;
	float output_amount = 8;
	string sending_node = 9;
	
}


message Block {
	repeated Transaction transactions = 1;
	string block_hash = 2;


	//header
	string hash_prev_block = 3;
	string hash_merkle_root = 4;
	int32 version = 5;
	int64 timestamp = 6;
	int64 bits = 7;
	int64 nonce = 8;
	
}


message Empty{
}

message RegisterRequest {
	int32 n_version = 1;
	string n_time = 2;
	string addr_me = 3;
}


message KnownPeers {
	repeated string known_peers = 1;
}


message HandshakeRequest{
	int32 n_version = 1;
	string n_time = 2;
	string addr_me = 3;
	int32 best_height = 4;
}


// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
